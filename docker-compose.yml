version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: rabbitmq
    # hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 10s
    restart: always
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
      - rabbitmq:/var/log/rabbitmq
  gses-app:
    container_name: gses-app
    build:
      context: .
      dockerfile: ./gses-app/Dockerfile
    env_file:
      - ./gses-app/.env
    ports:
      - 5000:5000
    command:
      - /bin/sh
      - -c
      - |
        npm run start
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
  logger-app:
    container_name: logger-app
    build:
      context: .
      dockerfile: ./logger-app/Dockerfile
    env_file:
      - ./logger-app/.env
    ports:
      - 5001:5001
    command:
      - /bin/sh
      - -c
      - |
        npm run start
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
  customer-app:
    container_name: customer-app
    build:
      context: .
      dockerfile: ./customer-app/Dockerfile
    env_file:
      - ./customer-app/.env
    ports:
      - 5002:5002
    command:
      - /bin/sh
      - -c
      - |
        npm run start
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
volumes:
  rabbitmq:
    driver: local